<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>Spr_PIdle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>Spr_PIdle</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>vsp = 0;
hsp = 0;
grv = 0.4;
walkmaxsp = 4;
runmaxsp = 6;
maxsp = walkmaxsp;
sp = 0.2;
jumpsp = 10;
//======LIFE======//
    maxLife = 10;
    life = maxLife;
    curLife = life;
//======ATTACK======//
    attack = false;
    attackDelay = 0;
    maxSword = 4;
    sword = 0;
//======Flash======//
    flashAlpha = 0;
//======Torch======//
    withTorch = true;
//======PowerUps======//
    maxPUMana = 10;
    PUMana = maxPUMana;
    //Dash
        PUDashAct = false;
        PUDash = false;
        PUDashTime = 0;
        PUDashCost = 2;
    //AirJump
        PUAirJumpAct = false;
        PUAirJump = true;
    //WallJump
        PUWallJumpAct = false;
//======Instances======//
    if(!instance_exists(Obj_Camera)){instance_create(x,y,Obj_Camera);}//Camera
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(withTorch){Scp_Light(128,c_white);}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Anim
audio_listener_position(x,y,noone);
audio_listener_orientation(0,0,-1000,0,1,0);
if(global.pause){sprite_index = Spr_PIdle; image_speed = 0; exit;}
if(!PUDash) and (!attack){//Normal
    Scp_PNormal();
}
if(PUDash) and (!attack){//Dash
    Scp_PDash();
}
if(!PUDash) and (attack){//Attack
    Scp_PAttack();
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move
Scp_Stuck();
//====COLLISIONS====//
    //HColl
    if(place_meeting(x+hsp,y,Obj_Floor)){
        while(!place_meeting(x+sign(hsp),y,Obj_Floor)){
            x += sign(hsp);
        }
        hsp = 0;
    }
    x += hsp;
    //VColl
    if(place_meeting(x,y+vsp,Obj_Floor)){
        while(!place_meeting(x,y+sign(vsp),Obj_Floor)){
            y += sign(vsp);
        }
        vsp = 0;
    }
    y += vsp;
    vsp += grv;
    if(vsp &gt;= 6){vsp = 6;}
//
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Hit
if(flashAlpha &lt;= 0){
    if(place_meeting(x,y,Obj_EnemyParent)) or (place_meeting(x,y,Obj_EnemyHitBox)) or (place_meeting(x,y,Obj_MissilParent)){
        audio_play_sound(Snd_SFXEnemyHit,0,0);
        hsp = 0;
        hsp -= image_xscale*20;
        vsp = 0;
        vsp -= 5;
        life--;
        flashAlpha = 1;
    }
    curLife = life;
}else if((!global.death)){
    life = curLife;
}
if(life &lt;= 0)and(!global.death){
    global.death = true;
}
if(global.death){
    audio_play_sound(Snd_SFXDeath,1,0);
}
/*if(global.death){
    room_restart();
    instance_destroy();
    sword = 0;
    PUDashAct = false;
    PUAirJump = false;
    PUWallJumpAct = false;
    PUMana = maxPUMana;
    life = maxLife;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Mana
if(PUMana &lt;= 0){
    PUMana = 0;
}
if(PUMana &gt;= maxPUMana){
    PUMana = maxPUMana;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///WallJump
if(!PUDash) and (!attack){
    if(PUWallJumpAct){
        if(!place_meeting(x,y+1,Obj_Floor)){
            if(place_meeting(x+image_xscale,y,Obj_Floor)){
                if(vsp &gt;= 1){
                    vsp = 1;
                    sprite_index = Spr_PWall;
                    if(keyJp){
                        vsp -= jumpsp;
                        audio_play_sound(Snd_SFXJump,1,0);
                    }
                }
                if(keyJp){
                    hsp = 0;
                    hsp -= image_xscale*3;
                    PUAirJump = true;
                }
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
//======SWORD======//
    if(sword &gt;= maxSword){sword = maxSword;}//===Limite
    if(sword &gt;= 1){
        //+++++SWORDS+++++//
            if(sword = 1){var SprSword = Spr_Sw1Attack;}
            if(sword = 2){var SprSword = Spr_Sw2Attack;}
            if(sword = 3){var SprSword = Spr_Sw3Attack;}
            if(sword = 4){var SprSword = Spr_Sw4Attack;}
        //+++++ACTIONS+++++//
            if(attack){
                draw_sprite_ext(SprSword,1,x+image_xscale*10,y,image_xscale,1,0,c_white,1);
            }
            if(!attack){
                draw_sprite_ext(SprSword,image_index,x-sprite_width/2,y,image_xscale,1,image_xscale*90,c_white,1);
            }
        //
    }
//======Flash======//
    if(flashAlpha &gt; 0){
        var flashColor = c_white;
        flashAlpha -= 0.05;
        shader_set(Shr_Flash);
        draw_sprite_ext(
            sprite_index,
            image_index,
            x, y,
            image_xscale, image_yscale,
            image_angle,
            flashColor,
            flashAlpha
        );
        shader_reset();
    }
//======LifeBar======//
    var LifeBC = c_red;
    var LifeBSX1 = view_xview + 5;   var LifeBSX2 = LifeBSX1 + life * 6;
    var LifeBSY1 = view_yview + 5;   var LifeBSY2 = LifeBSY1 + 5;
        draw_rectangle_colour(
            LifeBSX1, LifeBSY1,
            LifeBSX2, LifeBSY2,
            LifeBC, LifeBC,
            LifeBC, LifeBC,
            false
        );
//======ManaBar======//
    var ManaBC = c_blue;
    var ManaBSX1 = LifeBSX1;   var ManaBSX2 = ManaBSX1 + PUMana * 6;
    var ManaBSY1 = LifeBSY2;    var ManaBSY2 = ManaBSY1 + 5;
        draw_rectangle_colour(
            ManaBSX1, ManaBSY1,
            ManaBSX2, ManaBSY2,
            ManaBC, ManaBC,
            ManaBC, ManaBC,
            false
        );
//======SwordLevel======//
    draw_set_halign(fa_left);
    draw_text_colour(
        LifeBSX1,
        ManaBSY2+10,
        "SWORD lvl: "+string(sword)+"/"+string(maxSword),
        c_white, c_white,
        c_white, c_white,
        1
    );
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
