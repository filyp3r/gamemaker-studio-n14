<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>Spr_ENJumperIdle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>Obj_EnemyParent</parentName>
  <maskName>Spr_ENJumperIdle</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>vsp = 0;
hsp = 0;
grv = 0.2;
sp = 3;
move = 1;
attack = true;
jumpforce = 6;
life = 2;
flashAlpha = 1;

FloorCollSound = true;
RadSound = view_wview/1.3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.pause){image_speed = 0; exit;}
if(x&lt;view_xview-50)or(x &gt; view_xview+view_wview+50){exit;}
if(y&lt;view_yview-50)or(y &gt; view_yview+view_hview+100){exit;}
Scp_Stuck();
//Sound3D
    var Emitter = audio_emitter_create();
    audio_emitter_position(Emitter,x,y,noone);
    if(collision_circle(x,y,RadSound,Obj_Player,true,false)){
        audio_emitter_gain(Emitter,1);
    }else{
        audio_emitter_gain(Emitter,0);
    }
//ATTACK
if(attack){
    if(place_meeting(x,y+1,Obj_Floor)){
        if(FloorCollSound = false){
            if(audio_emitter_exists(Emitter)){
                audio_play_sound_on(Emitter,Snd_SFXJumperFloor,0,0)
            }
            FloorCollSound = true;
        }
        sprite_index = Spr_ENJumperFloor;
        image_speed = 0.2;
        if(image_index &gt;= 6){
            vsp = 0;
            vsp -= jumpforce;
            if(audio_emitter_exists(Emitter)){
                audio_play_sound_on(Emitter,Snd_SFXJumperJump,0,0);
            }
        }
        hsp = 0;
        if(distance_to_object(Obj_Player) != 0){
            sp = (x - Obj_Player.x)/distance_to_object(Obj_Player);
        }else{
            sp = 0;
        }
    }else{
        FloorCollSound = false;
        sprite_index = Spr_ENJumperJump;
        image_speed = 0;
        if(vsp &lt; -1.5){image_index = 0;}
        if(vsp &gt;= -1.5) and (vsp &lt;= 1.5){image_index = 1;}
        if(vsp &gt; 1.5){image_index = 2;}
        hsp = -sp;
    }
}
//HColl
if(place_meeting(x+hsp,y,Obj_Floor)){
    while(!place_meeting(x+sign(hsp),y,Obj_Floor)){
        x += sign(hsp);
    }
    hsp = 0;
}
x += hsp;
//VColl
if(place_meeting(x,y+vsp,Obj_Floor)){
    while(!place_meeting(x,y+sign(vsp),Obj_Floor)){
        y += sign(vsp);
    }
    vsp = 0;
}
y += vsp;
vsp += grv;
if(vsp &gt;= 5){vsp = 5;}

//Life
if(life &lt;= 0){
    instance_destroy();
    Obj_Player.PUMana += 0.5;
    audio_play_sound(Snd_SFXEnemyDie,0,0);
    Obj_Camera.HIT = 10;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
//======Flash======//
if(flashAlpha &gt; 0){
    var flashColor = c_white;
    flashAlpha -= 0.05;
    shader_set(Shr_Flash);
    
    draw_sprite_ext(sprite_index, image_index, x, y, image_xscale, image_yscale,image_angle,flashColor,flashAlpha);
    
    shader_reset();
}

//draw_circle_colour(x,y,RadSound,c_white,c_white,true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
