<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>Spr_FBIdle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>Obj_EnemyParent</parentName>
  <maskName>Spr_FBIdle</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hsp = 0;
vsp = 0;
walksp = 0.1;
grv = 0.2;
jumpsp = 10;
maxsp = 6;
time = 0;
maxTime = 120;

act = 0;

flashAlpha = 1;

life = 500;

audio_play_sound(Snd_SFXDeath,1,0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Scp_Stuck();
//3DSound
    var Emitter = audio_emitter_create();
    audio_emitter_position(Emitter,x,y,noone);
//
if(global.pause){image_speed = 0; exit;}
if(Obj_Player.x &gt; x){image_xscale = 1;}
if(Obj_Player.x &lt; x){image_xscale = -1;}
if(time &gt;= maxTime){
    switch(irandom(2)){
        case 0: act = 0; break;
        case 1: act = 1; break;
        case 2: act = 2; break;
        //case 3: act = 3; break;
    }
    time = 0;
}
if(life &gt; 100){
    switch(act){
        case 0:
            if(place_meeting(x,y+1,Obj_Floor)){
                vsp = 0;
                vsp -= jumpsp;
                Obj_Camera.x += (random_range(-5,5));
                Obj_Camera.y += (random_range(-5,5));
                audio_play_sound_on(Emitter,Snd_SFXEnemySwordFloor,0,1);
            }
            hsp -= image_xscale*walksp;
            var RandCreate = irandom(10);
            if(RandCreate = 5){
                instance_create(x,y-sprite_height/random_range(1.1,2),Obj_DirMissil);
            }
            break;
        case 1:
            if(hsp &gt; 0){hsp -= walksp;}
            if(hsp &lt; 0){hsp += walksp;}
            var RandCreate = irandom(20);
            if(RandCreate = 5){
                if(hsp = 0){instance_create(x,y-sprite_height/random_range(1.1,2),Obj_Missil);}
            }
            break;
        case 2: hsp += image_xscale*walksp; break;
    }
}else{
    switch(act){
        case 0:
            if(place_meeting(x,y+1,Obj_Floor)){
                vsp = 0;
                vsp -= jumpsp;
                Obj_Camera.x += (random_range(-5,5));
                Obj_Camera.y += (random_range(-5,5));
                audio_play_sound_on(Emitter,Snd_SFXEnemySwordFloor,0,1);
            }
            hsp -= image_xscale*walksp;
            var RandCreate = irandom(5);
            if(RandCreate = 5){
                instance_create(x,y-sprite_height/random_range(1.1,2),Obj_DirMissil);
            }
            break;
        case 1:
            if(hsp &gt; 0){hsp -= walksp;}
            if(hsp &lt; 0){hsp += walksp;}
            var RandCreate = irandom(5);
            if(RandCreate = 5){
                if(hsp = 0){instance_create(x,y-sprite_height/random_range(1.1,2),Obj_DirMissil);}
            }
            break;
        case 2:
            hsp += image_xscale*walksp;
            var RandCreate = irandom(5);
            if(RandCreate = 5){
                instance_create(x,y-sprite_height/random_range(1.1,2),Obj_DirMissil);
            }
            break;
    }
}
time += 1;
if(hsp &gt;= maxsp){hsp = maxsp;}
if(hsp &lt;= -maxsp){hsp = -maxsp;}
if(place_meeting(x,y+1,Obj_Floor)){
    if(hsp != 0){
        sprite_index = Spr_FBWalk;
        image_speed = 0.2*image_xscale*hsp;
        if(image_index &gt;=6)and(image_index &lt;= 6.5){
            Obj_Camera.x += (random_range(-5,5));
            Obj_Camera.y += (random_range(-5,5));
            audio_play_sound_on(Emitter,Snd_SFXHitWall,0,1);
        }
    }else{
        sprite_index = Spr_FBIdle;
        image_speed = 0.2;
    }
}else{
    sprite_index = Spr_FBJump;
    image_speed = 0;
    if(vsp &lt; -1.5){image_index = 0;}
    if(vsp &gt;= -1.5) and (vsp &lt;= 1.5){image_index = 1;}
    if(vsp &gt; 1.5){image_index = 2;}
}
//HColl
if(place_meeting(x+hsp,y,Obj_Floor)){
    while(!place_meeting(x+sign(hsp),y,Obj_Floor)){
        x += sign(hsp);
    }
    hsp = 0;
}
x += hsp;
//VColl
if(place_meeting(x,y+vsp,Obj_Floor)){
    while(!place_meeting(x,y+sign(vsp),Obj_Floor)){
        y += sign(vsp);
    }
    vsp = 0;
}
y += vsp;
vsp += grv;

if(life &lt;= 0){
    instance_destroy();
    with(instance_create(x,y,Obj_FinalBossDeath)){
        image_xscale = other.image_xscale;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
//======Flash======//
if(flashAlpha &gt; 0){
    var flashColor = c_red;
    flashAlpha -= 0.05;
    shader_set(Shr_Flash);
    
    draw_sprite_ext(sprite_index, image_index, x, y, image_xscale, image_yscale,image_angle,flashColor,flashAlpha);
    
    shader_reset();
}

draw_rectangle_colour(
    view_xview+view_wview/2,
    view_yview+view_hview-8,
    view_xview+view_wview/2+life/2,
    view_yview+view_hview-5,
    c_red,c_red,
    c_red,c_red,
    false
);
draw_rectangle_colour(
    view_xview+view_wview/2,
    view_yview+view_hview-8,
    view_xview+view_wview/2-life/2,
    view_yview+view_hview-5,
    c_red,c_red,
    c_red,c_red,
    false
);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
