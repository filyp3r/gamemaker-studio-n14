<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>VolSound = 1;
if(!sound_isplaying(Snd_AMBAmbience)){
    audio_play_sound(Snd_AMBAmbience,1,true);
}
SOUND_INTRO = audio_play_sound(Snd_OSTIntro,2,false);
SndPos = audio_sound_get_track_position(SOUND_INTRO);

//VARS CRED
cred1 = false;
cred2 = false;
cred3 = false;
cred4 = false;
cred5 = false;
cred6 = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.trMenu = true){
    VolSound -= 0.01;
    if (VolSound &lt;= 0){
        sound_stop(Snd_OSTIntro);
        instance_destroy();
    }
    audio_sound_gain(Snd_OSTIntro,VolSound,noone);
}
SndPos = audio_sound_get_track_position(SOUND_INTRO);
//===Credito 1===//
    if(SndPos &gt;= 6.4) and (cred1 = false){
        with(instance_create(view_xview + view_wview/2,view_yview + view_hview/2,Obj_Credits)){
            maxTimeAlpha = 2;
            other.cred1 = true;
            sprite_index = Spr_CreditsNames;
        }
    }
//===Credito 2===//
    if(SndPos &gt;= 9.6) and (cred2 = false){
        with(instance_create(view_xview + view_wview/2,view_yview + view_hview/2,Obj_Credits)){
            maxTimeAlpha = 2;
            other.cred2 = true;
            sprite_index = Spr_CreditsDicDie;
        }
    }
//===Credito 3===//
    if(SndPos &gt;= 12.8) and (cred3 = false){
        with(instance_create(view_xview + view_wview/2,view_yview + view_hview/2,Obj_Credits)){
            maxTimeAlpha = 7;
            other.cred3 = true;
            sprite_index = Spr_CreditsGameJaaj;
        }
    }
//===Credito 4===//
    if(SndPos &gt;= 19.2) and (cred4 = false){
        room_goto(Rm_Intro2);
        cred4 = true;
    }
//===Credito 5===//
    if(SndPos &gt;= 25.6) and (cred5 = false){
        if(!instance_exists(Obj_CrGameName)){
            instance_create(view_xview + view_wview/2,view_yview + view_hview/2,Obj_CrGameName);
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
